{"version":3,"file":"bootstrap-vue.common.js","sources":["../lib/utils/observe-dom.js","../lib/directives/_target.js","../lib/components/alert.vue","../lib/components/link.vue","../lib/components/breadcrumb.vue","../lib/components/button.vue","../lib/components/button-group.vue","../lib/mixins/generate-id.js","../lib/components/input-group-addon.vue","../lib/components/input-group.vue","../lib/components/input-group-button.vue","../lib/components/card.vue","../lib/components/card-group.vue","../lib/components/carousel.vue","../lib/components/carousel-slide.vue","../lib/components/collapse.vue","../lib/mixins/clickout.js","../lib/mixins/dropdown.js","../lib/components/dropdown.vue","../lib/components/dropdown-item.vue","../lib/components/dropdown-divider.vue","../lib/components/dropdown-header.vue","../lib/components/dropdown-select.vue","../lib/components/form.vue","../lib/components/form-fieldset.vue","../lib/mixins/form.js","../lib/mixins/form-checkbox.js","../lib/components/form-checkbox.vue","../lib/mixins/form-options.js","../lib/components/form-radio.vue","../lib/components/form-input-static.vue","../lib/components/form-input.vue","../lib/components/form-file.vue","../lib/components/form-select.vue","../lib/components/jumbotron.vue","../lib/components/badge.vue","../lib/components/list-group.vue","../lib/components/list-group-item.vue","../lib/components/media.vue","../lib/components/modal.vue","../lib/components/nav.vue","../lib/components/nav-item.vue","../lib/components/nav-item-dropdown.vue","../lib/components/nav-toggle.vue","../lib/components/navbar.vue","../lib/components/pagination.vue","../lib/components/popover.vue","../lib/components/progress.vue","../lib/components/table.vue","../lib/components/tabs.vue","../lib/components/tab.vue","../lib/components/tooltip.vue","../lib/directives/toggle.js","../lib/directives/modal.js","../lib/index.js"],"sourcesContent":["/**\r\n * Observe a DOM element changes, falls back to eventListener mode\r\n * @param {Element} el The DOM element to observe\r\n * @param {Function} callback callback to be called on change\r\n * @param {object} [opts={childList: true, subtree: true}] observe options\r\n * @see http://stackoverflow.com/questions/3219758\r\n */\r\nexport default function observeDOM(el, callback, opts) {\r\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\r\n    const eventListenerSupported = window.addEventListener;\r\n\r\n    if (MutationObserver) {\r\n        // Define a new observer\r\n        const obs = new MutationObserver(mutations => {\r\n            if (mutations[0].addedNodes.length > 0 || mutations[0].removedNodes.length > 0) {\r\n                callback();\r\n            }\r\n        });\r\n\r\n        // Have the observer observe foo for changes in children\r\n        obs.observe(el, Object.assign({childList: true, subtree: true}, opts));\r\n    } else if (eventListenerSupported) {\r\n        el.addEventListener('DOMNodeInserted', callback, false);\r\n        el.addEventListener('DOMNodeRemoved', callback, false);\r\n    }\r\n}\r\n","const all_listen_types = {hover: true, click: true, focus: true};\r\n\r\nexport default function targets(el, binding, listen_types, fn) {\r\n    const vm = el.__vue__;\r\n\r\n    if (!vm) {\r\n        console.warn('__vue__ is not available on element', el);\r\n        return;\r\n    }\r\n\r\n    const targets = Object.keys(binding.modifiers || {})\r\n        .filter(t => !all_listen_types[t]);\r\n\r\n    if (binding.value) {\r\n        targets.push(binding.value);\r\n    }\r\n\r\n    const listener = () => {\r\n        fn({targets, vm});\r\n    };\r\n\r\n    Object.keys(all_listen_types).forEach(type => {\r\n        if (listen_types[type] || binding.modifiers[type]) {\r\n            console.log(type);\r\n            el.addEventListener(type, listener);\r\n        }\r\n    });\r\n}\r\n","<template>\n    <div :class=\"classObject\" role=\"alert\" v-if=\"localShow\">\n        <button type=\"button\"\n                class=\"close\"\n                data-dismiss=\"alert\"\n                aria-label=\"Close\"\n                v-if=\"dismissible\"\n                @click.stop.prevent=\"dismiss\"\n        >\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                countDownTimerId: null,\n                dismissed: false\n            };\n        },\n        created() {\n            if (this.state) {\n                console.warn('<b-alrt> state property is deprecated, please use variant instead.');\n            }\n        },\n        computed: {\n            classObject() {\n                return ['alert', this.alertVariant, this.dismissible ? 'alert-dismissible' : ''];\n            },\n            alertVariant() {\n                const variant = this.state || this.variant || 'info';\n                return `alert-${variant}`;\n            },\n            localShow() {\n                return !this.dismissed && (this.countDownTimerId || this.show);\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'info'\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            dismissible: {\n                type: Boolean,\n                default: false\n            },\n            show: {\n                type: [Boolean, Number],\n                default: false\n            }\n        },\n        watch: {\n            show() {\n                this.showChanged();\n            }\n        },\n        mounted() {\n            this.showChanged();\n        },\n        methods: {\n            dismiss() {\n                this.dismissed = true;\n                this.$emit('dismissed');\n                this.clearCounter();\n            },\n            clearCounter() {\n                if (this.countDownTimerId) {\n                    clearInterval(this.countDownTimerId);\n                }\n            },\n            showChanged() {\n                // Reset dismiss status\n                this.dismissed = false;\n\n                // No timer for boolean values\n                if (this.show === true || this.show === false || this.show === null || this.show === 0) {\n                    return;\n                }\n\n                let dismissCountDown = this.show;\n                this.$emit('dismiss-count-down', dismissCountDown);\n\n                // Start counter\n                this.clearCounter();\n                this.countDownTimerId = setInterval(() => {\n                    if (dismissCountDown < 2) {\n                        return this.dismiss();\n                    }\n                    dismissCountDown--;\n                    this.$emit('dismiss-count-down', dismissCountDown);\n                }, 1000);\n            }\n        }\n    };\n</script>\n","<template>\r\n    <a :is=\"componentType\"\r\n       :active-class=\"activeClass\"\r\n       :disabled=\"disabled\"\r\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\r\n       :to=\"to\"\r\n       :href=\"hrefString\"\r\n       :exact=\"exact\"\r\n       @click=\"click\"\r\n    >\r\n        <slot></slot>\r\n    </a>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            componentType() {\r\n                return (this.$router && this.to) ? 'router-link' : 'a';\r\n            },\r\n            hrefString() {\r\n                if (this.to) {\r\n                    return this.to.path || this.to;\r\n                }\r\n                return this.href;\r\n            }\r\n        },\r\n        props: {\r\n            activeClass: {\r\n                type: String,\r\n                default: 'active'\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            to: {\r\n                type: [String, Object],\r\n                default: null\r\n            },\r\n            href: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            exact: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            click(e) {\r\n                if (this.disabled || this.href === '#') {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                }\r\n\r\n                if (!this.disabled) {\r\n                    this.$emit('click', e);\r\n                    this.$root.$emit('shown::dropdown', this);\r\n                }\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n    <ol class=\"breadcrumb\">\n        <li v-for=\"item in items2\" :class=\"['breadcrumb-item', item.__active ? 'active' : null]\"\n            @click=\"onclick(item)\">\n            <span v-if=\"item.active\" v-html=\"item.text\"></span>\n            <b-link v-else :to=\"item.to\" :href=\"item.href || item.link\" v-html=\"item.text\"></b-link>\n        </li>\n        <slot></slot>\n    </ol>\n</template>\n\n<script>\n    import bLink from './link.vue';\n\n    export default {\n        components: {bLink},\n        computed: {\n            componentType() {\n                return this.to ? 'router-link' : 'a';\n            },\n            items2() {\n                const last = this.items.length > 0 && this.items[this.items.length - 1];\n\n                return this.items.map(item => {\n                    if (typeof item === 'string') {\n                        return {text: item, link: '#', active: item === last};\n                    }\n\n                    if (item.active !== true && item.active !== false) {\n                        item.__active = item === last;\n                    } else {\n                        item.__active = item.active;\n                    }\n\n                    return item;\n                });\n            }\n        },\n        props: {\n            items: {\n                type: Array,\n                default: () => [],\n                required: true\n            }\n        },\n        methods: {\n            onclick(item) {\n                this.$emit('click', item);\n                if (this.$router && this.to) {\n                    this.$router.push(this.to);\n                }\n            }\n        }\n    };\n</script>\n","<template>\r\n    <button :class=\"classObject\"\r\n            :is=\"componentType\"\r\n            :to=\"to\"\r\n            :href=\"href\"\r\n            @click=\"onclick\"\r\n            :disabled=\"disabled\"\r\n    >\r\n        <slot></slot>\r\n    </button>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        components: {bLink},\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'btn',\r\n                    this.btnVariant,\r\n                    this.btnSize,\r\n                    this.btnBlock,\r\n                    this.btnDisabled,\r\n                    this.inactive ? 'btn-inactive' : ''\r\n                ];\r\n            },\r\n            componentType() {\r\n                return (this.href || this.to) ? 'b-link' : 'button';\r\n            },\r\n            btnBlock() {\r\n                return this.block ? `btn-block` : '';\r\n            },\r\n            btnVariant() {\r\n                return this.variant ? `btn-${this.variant}` : `btn-secondary`;\r\n            },\r\n            btnSize() {\r\n                return this.size ? `btn-${this.size}` : '';\r\n            },\r\n            btnDisabled() {\r\n                return this.disabled ? 'disabled' : '';\r\n            }\r\n        },\r\n        props: {\r\n            block: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            inactive: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            role: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: 'md'\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            to: {\r\n                type: [String, Object]\r\n            },\r\n            href: {\r\n                type: String\r\n            }\r\n        },\r\n        methods: {\r\n            onclick(e) {\r\n                if (this.disabled) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                } else {\r\n                    this.$emit('click', e);\r\n                }\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"classObject\" role=\"group\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'btn-' + (this.toolbar ? 'toolbar' : 'group'),\r\n                    this.vertical ? 'btn-group-vertical' : '',\r\n                    this.size ? ('btn-group-' + this.size) : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            vertical: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            toolbar: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","/**\r\n * Tries to generate id using uid if no id prop is provided.\r\n * NOTE: this mixin should be used only when `aria` and `for` tags are needed, in other cases.\r\n * it is better to prefer references/refs and events over relying on generated id.\r\n * @see https://github.com/bootstrap-vue/bootstrap-vue/issues/281\r\n *\r\n * Currently is being used in:\r\n *  - dropdown.vue\r\n *  - form-checkbox-vue\r\n *  - form-file.vue\r\n *  - form-input.vue\r\n *  - form-select.vue\r\n */\r\n\r\nexport default {\r\n    computed: {\r\n        _id() {\r\n            if (this.id) {\r\n                return this.id;\r\n            }\r\n\r\n            return `__b_${this._uid}__`;\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <span class=\"input-group-addon\" :id=\"_id\">\r\n        <slot></slot>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [generateId],\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"classObject\">\r\n        <slot name=\"left\">\r\n            <b-input-group-addon v-if=\"left\" v-html=\"left\"></b-input-group-addon>\r\n        </slot>\r\n        <slot></slot>\r\n        <slot name=\"right\">\r\n            <b-input-group-addon v-if=\"right\" v-html=\"right\"></b-input-group-addon>\r\n        </slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import bInputGroupAddon from './input-group-addon.vue';\r\n\r\n    export default {\r\n        components: {bInputGroupAddon},\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'input-group',\r\n                    this.size ? ('input-group-' + this.size) : '',\r\n                    this.state ? ('has-' + this.state) : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            left: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            right: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div class=\"input-group-btn\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {}\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"['card',cardVariant,cardAlign,cardInverse]\">\r\n        <!-- Card Image Slot-->\r\n        <slot name=\"img\" ref=\"img\">\r\n            <img v-if=\"img\" :src=\"img\" :alt=\"imgAlt\" class=\"card-img\">\r\n        </slot>\r\n\r\n        <!-- Card Header-->\r\n        <component v-if=\"header || showHeader\" :is=\"headerTag\" class=\"card-header\">\r\n            <slot name=\"header\">\r\n                <div v-html=\"header\"></div>\r\n            </slot>\r\n        </component>\r\n\r\n        <!--Show custom block when no-block prop is set-->\r\n        <template v-if=\"noBlock\">\r\n            <slot></slot>\r\n        </template>\r\n\r\n        <!-- Card Standard Blocks-->\r\n        <div :class=\"blockClass\" v-else>\r\n            <h4 v-if=\"title\" class=\"card-title\" v-html=\"title\"></h4>\r\n            <h6 v-if=\"subTitle\" class=\"card-subtitle mb-2 text-muted\" v-html=\"subTitle\"></h6>\r\n            <slot></slot>\r\n        </div>\r\n\r\n        <!-- Card Footer-->\r\n        <component v-if=\"footer || showFooter\" :is=\"footerTag\" class=\"card-footer\">\r\n            <slot name=\"footer\">\r\n                <div v-html=\"footer\"></div>\r\n            </slot>\r\n        </component>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            blockClass() {\r\n                return [\r\n                    'card-block',\r\n                    this.overlay ? 'card-img-overlay' : null\r\n                ];\r\n            },\r\n            cardVariant() {\r\n                return this.variant ? `card-${this.variant}` : null;\r\n            },\r\n            cardInverse() {\r\n                if (this.overlay || this.inverse) {\r\n                    return 'card-inverse';\r\n                }\r\n                // Auto inverse colored cards\r\n                if (this.inverse === null && this.variant && this.variant.length > 0 &&\r\n                    this.variant.indexOf('outline') === -1) {\r\n                    return 'card-inverse';\r\n                }\r\n            },\r\n            cardAlign() {\r\n                return this.align ? `text-${this.align}` : null;\r\n            }\r\n        },\r\n        props: {\r\n            align: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            inverse: {\r\n                type: Boolean,\r\n                // It should remain null for auto inverse\r\n                default: null\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n\r\n            // Header\r\n            header: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            showHeader: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            headerTag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n\r\n            // Footer\r\n            footer: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            showFooter: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            footerTag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n\r\n            // Main block\r\n            title: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            subTitle: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            noBlock: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n\r\n            // Image\r\n            img: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            imgAlt: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            overlay: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n    <div :class=\"['card-' + type]\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            type() {\n                if (this.deck) {\n                    return 'deck';\n                }\n\n                if (this.columns) {\n                    return 'columns';\n                }\n\n                return 'group';\n            }\n        },\n        props: {\n            deck: {\n                type: Boolean,\n                default: false\n            },\n            columns: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\r\n    <div class=\"carousel slide\" @mouseenter=\"pause\" @mouseleave=\"start\" :style=\"{background,height}\">\r\n        <!-- Indicators -->\r\n        <ol class=\"carousel-indicators\" v-show=\"indicators\">\r\n            <li v-for=\"n in slides.length\"\r\n                :class=\"{active:n-1 === index}\"\r\n                @click=\"index=n-1\"\r\n            ></li>\r\n        </ol>\r\n\r\n        <!-- Wrapper for slides -->\r\n        <div class=\"carousel-inner\" role=\"listbox\">\r\n            <slot></slot>\r\n        </div>\r\n\r\n        <!-- Controls -->\r\n        <template v-if=\"controls\">\r\n            <a class=\"carousel-control-prev\" href=\"#\" role=\"button\" data-slide=\"prev\" @click.stop.prevent=\"prev\">\r\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Previous</span>\r\n            </a>\r\n            <a class=\"carousel-control-next\" href=\"#\" role=\"button\" data-slide=\"next\" @click.stop.prevent=\"next\">\r\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Next</span>\r\n            </a>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const DIRECTION = {\r\n        next: {\r\n            current: 'carousel-item-left',\r\n            next: 'carousel-item-right',\r\n            overlay: 'carousel-item-next'\r\n        },\r\n        prev: {\r\n            current: 'carousel-item-right',\r\n            next: 'carousel-item-left',\r\n            overlay: 'carousel-item-prev'\r\n        }\r\n    };\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                index: 0,\r\n                isSliding: false,\r\n                slides: []\r\n            };\r\n        },\r\n        props: {\r\n            interval: {\r\n                type: Number,\r\n                default: 5000\r\n            },\r\n            indicators: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            controls: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            height: {\r\n                type: String\r\n            },\r\n            background: {\r\n                type: String\r\n            }\r\n        },\r\n        methods: {\r\n            // Previous slide\r\n            prev() {\r\n                if (this.index <= 0) {\r\n                    this.index = this.slides.length - 1;\r\n                } else {\r\n                    this.index--;\r\n                }\r\n            },\r\n\r\n            // Next slide\r\n            next() {\r\n                if (this.index >= this.slides.length - 1) {\r\n                    this.index = 0;\r\n                } else {\r\n                    this.index++;\r\n                }\r\n            },\r\n\r\n            // Pause auto rotation\r\n            pause() {\r\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\r\n                    return;\r\n                }\r\n                clearInterval(this._intervalId);\r\n            },\r\n\r\n            // Start auto rotate slides\r\n            start() {\r\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\r\n                    return;\r\n                }\r\n                this._intervalId = setInterval(() => {\r\n                    this.next();\r\n                }, this.interval);\r\n            }\r\n        },\r\n        mounted() {\r\n            // Get all slides\r\n            this.slides = this.$el.querySelectorAll('.carousel-item');\r\n\r\n            // Set first slide as active\r\n            this.slides[0].classList.add('active');\r\n\r\n            // Auto rotate slides\r\n            this.start();\r\n        },\r\n        watch: {\r\n            index(val, oldVal) {\r\n                if (val === oldVal) {\r\n                    return;\r\n                }\r\n\r\n                if (this.isSliding) {\r\n                    this.index = oldVal;\r\n                    return;\r\n                }\r\n\r\n                // Determine sliding direction\r\n                let direction = (val > oldVal) ? DIRECTION.next : DIRECTION.prev;\r\n\r\n                // Rotates\r\n                if (oldVal === 0 && val === this.slides.length - 1) {\r\n                    direction = DIRECTION.prev;\r\n                } else if (oldVal === this.slides.length - 1 && val === 0) {\r\n                    direction = DIRECTION.next;\r\n                }\r\n\r\n                // Determine current and next slides\r\n                const currentSlide = this.slides[oldVal];\r\n                const nextSlide = this.slides[val];\r\n\r\n                if (!currentSlide || !nextSlide) {\r\n                    return;\r\n                }\r\n\r\n                // Start animating\r\n                this.isSliding = true;\r\n\r\n                nextSlide.classList.add(direction.next, direction.overlay);\r\n                currentSlide.classList.add(direction.current);\r\n\r\n                this._carouselAnimation = setTimeout(() => {\r\n                    this.isSliding = false;\r\n                    this.$emit('slide', val);\r\n\r\n                    currentSlide.classList.remove('active');\r\n                    nextSlide.classList.add('active');\r\n\r\n                    currentSlide.classList.remove(direction.current);\r\n                    nextSlide.classList.remove(direction.next, direction.overlay);\r\n                }, 500);\r\n            }\r\n        },\r\n        destroyed() {\r\n            clearTimeout(this._carouselAnimation);\r\n            clearInterval(this._intervalId);\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div class=\"carousel-item\" :style=\"{background,height}\">\r\n        <img class=\"d-block img-fluid\" v-if=\"img\" :src=\"img\" :alt=\"imgAlt\">\r\n        <div :class=\"contentClasses\">\r\n            <h3 v-if=\"caption\" v-html=\"caption\"></h3>\r\n            <p v-if=\"text\" v-html=\"text\"></p>\r\n            <slot></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            img: {\r\n                type: String\r\n            },\r\n            imgAlt: {\r\n                type: String\r\n            },\r\n            contentVisibleUp: {\r\n                type: String\r\n            },\r\n            caption: {\r\n                type: String\r\n            },\r\n            text: {\r\n                type: String\r\n            },\r\n            background: {\r\n                type: String\r\n            },\r\n            height: {\r\n                type: String\r\n            }\r\n        },\r\n        computed: {\r\n            contentClasses() {\r\n                const classes = {\r\n                    'carousel-caption': Boolean(this.caption)\r\n                };\r\n                if (this.contentVisibleUp) {\r\n                    classes['d-none'] = true;\r\n                    classes[`d-${this.contentVisibleUp}-block`] = true;\r\n                }\r\n                return classes;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <transition\r\n            @enter=\"enter\"\r\n            @after-enter=\"clearHeight\"\r\n            @leave=\"leave\"\r\n            @after-leave=\"clearHeight\"\r\n            name=\"collapse\"\r\n    >\r\n        <div :class=\"classObject\" v-show=\"show\">\r\n            <slot></slot>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<style scoped>\r\n    .collapse-enter-active, .collapse-leave-active {\r\n        transition: all .35s ease;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .collapse-enter, .collapse-leave-to {\r\n        /*height: 0;*/\r\n    }\r\n</style>\r\n\r\n<script>\r\n    export default {\r\n\r\n        data() {\r\n            return {\r\n                show: false\r\n            };\r\n        },\r\n\r\n        computed: {\r\n            classObject() {\r\n                return {\r\n                    'navbar-collapse': this.isNav,\r\n                    show: this.show\r\n                };\r\n            }\r\n        },\r\n\r\n        props: {\r\n            isNav: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            id: {\r\n                type: String,\r\n                required: true\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            toggle() {\r\n                this.show = !this.show;\r\n            },\r\n            enter(el) {\r\n                el.style.height = 'auto';\r\n                const realHeight = getComputedStyle(el).height;\r\n                el.style.height = '0px';\r\n\r\n                /* eslint-disable no-unused-expressions */\r\n                el.offsetHeight; // Force repaint\r\n\r\n                el.style.height = realHeight;\r\n            },\r\n            leave(el) {\r\n                el.style.height = 'auto';\r\n                const realHeight = getComputedStyle(el).height;\r\n                el.style.height = realHeight;\r\n\r\n                /* eslint-disable no-unused-expressions */\r\n                el.offsetHeight; // Force repaint\r\n\r\n                el.style.height = '0px';\r\n            },\r\n            clearHeight(el) {\r\n                el.style.height = null;\r\n            }\r\n        },\r\n\r\n        created() {\r\n            this.$root.$on('collapse::toggle', target => {\r\n                if (target !== this.id) {\r\n                    return;\r\n                }\r\n                this.toggle();\r\n            });\r\n        }\r\n    };\r\n\r\n</script>\r\n","export default {\n    mounted() {\n        if (typeof document !== 'undefined') {\n            document.documentElement.addEventListener('click', this._clickOutListener);\n        }\n    },\n    destroyed() {\n        if (typeof document !== 'undefined') {\n            document.removeEventListener('click', this._clickOutListener);\n        }\n    },\n    methods: {\n        _clickOutListener(e) {\n            if (!this.$el.contains(e.target)) {\n                if (this.clickOutListener) {\n                    this.clickOutListener();\n                }\n            }\n        }\n    }\n};\n","const ITEM_SELECTOR = '.dropdown-item:not(.disabled):not([disabled]),.dropdown-header';\r\n\r\nexport default {\r\n    props: {\r\n        split: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        text: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        dropup: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        right: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    created() {\r\n        this.$root.$on('shown::dropdown', el => {\r\n            // To keep one dropdown opened on page\r\n            if (el !== this) {\r\n                this.visible = false;\r\n            }\r\n        });\r\n    },\r\n    watch: {\r\n        visible(state, old) {\r\n            if (state === old) {\r\n                return; // Avoid duplicated emits\r\n            }\r\n\r\n            if (state) {\r\n                this.$root.$emit('shown::dropdown', this);\r\n                /*\r\n                 If this is a touch-enabled device we add extra\r\n                 empty mouseover listeners to the body's immediate children;\r\n                 only needed because of broken event delegation on iOS\r\n                 https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\r\n                 */\r\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\r\n                    const children = [...document.body.children];\r\n                    children.forEach(el => {\r\n                        el.addEventListener('mouseover', this.noop);\r\n                    });\r\n                }\r\n            } else {\r\n                this.$root.$emit('hidden::dropdown', this);\r\n                /*\r\n                 If this is a touch-enabled device we remove the extra\r\n                 empty mouseover listeners we added for iOS support\r\n                 */\r\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\r\n                    const children = [...document.body.children];\r\n                    children.forEach(el => {\r\n                        el.removeEventListener('mouseover', this.noop);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        noop() {\r\n            // Do nothing event handler (used in visible watch)\r\n        },\r\n        toggle() {\r\n            if (this.disabled) {\r\n                this.visible = false;\r\n                return;\r\n            }\r\n            this.visible = !this.visible;\r\n            if (this.visible) {\r\n                // Focus first non-dsabled item\r\n                const items = this.getItems();\r\n                if (items.length > 0) {\r\n                    items[0].focus();\r\n                }\r\n            }\r\n        },\r\n        onTab() {\r\n            if (this.visible) {\r\n                this.visible = false;\r\n            }\r\n        },\r\n        onEsc(e) {\r\n            if (this.visible) {\r\n                this.visible = false;\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                // Return focus to original button\r\n                ((this.split && this.$refs.toggle) ? this.$refs.toggle : this.$refs.button).focus();\r\n            }\r\n        },\r\n        focusNext(e, up) {\r\n            if (!this.visible) {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            const items = this.getItems();\r\n            if (items.length < 1) {\r\n                return;\r\n            }\r\n            let index = items.indexOf(e.target);\r\n            if (up && index > 0) {\r\n                index--;\r\n            } else if (!up && index < items.length - 1) {\r\n                index++;\r\n            }\r\n            if (index < 0) {\r\n                index = 0;\r\n            }\r\n            items[index].focus();\r\n        },\r\n        getItems() {\r\n            return [...this.$refs.menu.querySelectorAll(ITEM_SELECTOR)];\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <div :class=\"['dropdown','btn-group',{dropup, show: visible}]\">\r\n\r\n        <b-button :class=\"{'dropdown-toggle': !split, 'btn-link': link}\"\r\n                  ref=\"button\"\r\n                  :id=\"_id\"\r\n                  :aria-haspopup=\"split ? null : 'true'\"\r\n                  :aria-expanded=\"split ? null : (visible ? 'true' : 'false')\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\"\r\n                  @click.stop.prevent=\"click\"\r\n        >\r\n            <slot name=\"text\">{{text}}</slot>\r\n        </b-button>\r\n\r\n        <b-button :class=\"['dropdown-toggle','dropdown-toggle-split',{'btn-link': link}]\"\r\n                  v-if=\"split\"\r\n                  ref=\"toggle\"\r\n                  :aria-haspopup=\"split ? 'true' : null\"\r\n                  :aria-expanded=\"split ? (visible ? 'true' : 'false') : null\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\"\r\n                  @click.stop.prevent=\"toggle\"\r\n        ><span class=\"sr-only\">{{toggleText}}</span></b-button>\r\n\r\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\r\n             ref=\"menu\"\r\n             role=\"menu\"\r\n             :aria-labelledby=\"split ? null : _id\"\r\n             @keyup.esc=\"onEsc\"\r\n             @keydown.tab=\"onTab\"\r\n             @keydown.up=\"focusNext($event,true)\"\r\n             @keydown.down=\"focusNext($event,false)\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n    import dropdown from '../mixins/dropdown';\r\n    import generateId from '../mixins/generate-id';\r\n    import bButton from './button.vue';\r\n\r\n    export default {\r\n        mixins: [clickOut, dropdown, generateId],\r\n        components: {bButton},\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        props: {\r\n            toggleText: {\r\n                type: String,\r\n                default: 'Toggle Dropdown'\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            link: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            clickOutListener() {\r\n                this.visible = false;\r\n            },\r\n            click(e) {\r\n                if (this.disabled) {\r\n                    this.visible = false;\r\n                    return;\r\n                }\r\n\r\n                if (this.split) {\r\n                    this.$emit('click', e);\r\n                    this.$root.$emit('shown::dropdown', this);\r\n                } else {\r\n                    this.toggle();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <a :is=\"itemType\"\r\n       :class=\"['dropdown-item',{ disabled }]\"\r\n       :to=\"to\"\r\n       :href=\"hrefString\"\r\n       :disabled=\"disabled\"\r\n       tabindex=\"-1\"\r\n       role=\"menuitem\"\r\n       @click=\"click\"\r\n       @click.native=\"click\"\r\n    >\r\n        <slot></slot>\r\n    </a>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        extends: bLink,\r\n        computed: {\r\n            itemType() {\r\n                return (this.href || this.to) ? this.componentType : 'button';\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div role=\"separator\" class=\"dropdown-divider\"></div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {}\r\n    };\r\n</script>\r\n","<template>\r\n    <component :is=\"tag\" tabindex=\"-1\" class=\"dropdown-header\">\r\n        <slot></slot>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            tag: {\r\n                type: String,\r\n                default: 'h6'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n    <div class=\"dropdown-select\" :class=\"{open: show, dropdown: !dropup, dropup: dropup}\">\n        <button\n                :id=\"id\"\n                :class=\"['btn','dropdown',dropdownToggle,btnVariant,btnSize]\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"show\"\n                @click.prevent=\"toggle($event)\"\n                :disabled=\"disabled\">\n            <span class=\"checked-items\" v-html=\"displayItem\"></span>\n        </button>\n        <ul class=\"dropdown-menu\" :class=\"{'dropdown-menu-right' : position == 'right'}\" aria-labelledby=\"dLabel\">\n            <li v-for=\"item in list\">\n                <button class=\"dropdown-item\" :click.stop.prevent=\"select(item)\">{{item.text}}</button>\n            </li>\n        </ul>\n    </div>\n</template>\n\n\n<script>\n    export default {\n        data() {\n            return {\n                show: false,\n                selected: false\n            };\n        },\n        computed: {\n            btnVariant() {\n                return !this.variant || this.variant === `default` ? `btn-secondary` : `btn-${this.variant}`;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            dropdownToggle() {\n                return this.caret ? 'dropdown-toggle' : '';\n            },\n            displayItem() {\n                // If zero show default message\n                if ((this.returnObject && this.model && !this.model.text) || (!this.returnObject && this.model && this.model.length === 0) || this.forceDefault) {\n                    return this.defaultText;\n                }\n\n                // Show selected item\n                if (this.returnObject && this.model && this.model.text) {\n                    return this.model.text;\n                }\n\n                // Show text that coresponds to the model value\n                if (!this.returnObject && this.model) {\n                    let result = this.model || '';\n                    this.list.forEach(function (item) {\n                        if (item.value === this.model) {\n                            result = item.text;\n                        }\n                    });\n                    return result;\n                }\n\n                return '';\n            }\n        },\n        props: {\n            id: {\n                type: String\n            },\n            model: {\n                required: false\n            },\n            list: {\n                type: Array,\n                default: [],\n                required: true\n            },\n            caret: {\n                type: Boolean,\n                default: true\n            },\n            position: {\n                type: String,\n                default: 'left'\n            },\n            size: {\n                type: String,\n                default: ''\n            },\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            defaultText: {\n                type: String,\n                default: 'Plase select one'\n            },\n            forceDefault: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            },\n            dropup: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle(e) {\n                // Hide an alert\n                this.show = !this.show;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                if (this.show) {\n                    this.$root.$emit('shown:dropdown', this.id);\n                    e.stopPropagation();\n                } else {\n                    this.$root.$emit('hidden::dropdown', this.id);\n                }\n            },\n            select(item) {\n                // We need to set empty model to make model watchers react to it\n                if (this.returnObject) {\n                    this.model = item;\n                } else {\n                    this.model = item.value;\n                }\n                this.show = false;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                this.$root.$emit('selected::dropdown', this.id, this.model);\n            }\n        },\n        created() {\n            const hub = this.$root;\n            hub.$on('hide::dropdown', function () {\n                this.show = false;\n            });\n        }\n    };\n</script>\n","<template>\n    <form :class=\"classObject\">\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nexport default {\n    computed: {\n        classObject() {\n            return [\n                this.inline ? 'form-inline' : ''\n            ];\n        }\n    },\n    props: {\n        inline: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\r\n    <div :class=\"['form-group','row',inputState]\">\r\n        <label :for=\"target\"\r\n               v-if=\"label\"\r\n               :class=\"['col-form-label',labelLayout]\"\r\n               v-html=\"label\"\r\n        ></label>\r\n        <div :class=\"inputLayout\" ref=\"content\">\r\n            <slot></slot>\r\n            <div class=\"form-text form-control-feedback\"\r\n                 v-if=\"feedback\"\r\n                 role=\"alert\"\r\n                 aria-live=\"polite\"\r\n                 v-html=\"feedback\"\r\n            ></div>\r\n            <small class=\"form-text text-muted\"\r\n                   v-if=\"description\"\r\n                   v-html=\"description\"\r\n            ></small>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                target: null\r\n            };\r\n        },\r\n        computed: {\r\n            inputState() {\r\n                return this.state ? `has-${this.state}` : '';\r\n            },\r\n            labelLayout() {\r\n                return this.horizontal ? ('col-sm-' + this.labelSize) : 'col-12';\r\n            },\r\n            inputLayout() {\r\n                return this.horizontal ? ('col-sm-' + (12 - this.labelSize)) : 'col-12';\r\n            }\r\n        },\r\n        methods: {\r\n            updateTarget() {\r\n                const content = this.$refs.content;\r\n                if (!content) {\r\n                    return null;\r\n                }\r\n                const input = content.querySelector(this.inputSelector);\r\n                this.target = (input && input.id) ? input.id : null;\r\n            }\r\n        },\r\n        mounted() {\r\n            this.updateTarget();\r\n        },\r\n        updated() {\r\n            this.updateTarget();\r\n        },\r\n        props: {\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            horizontal: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            labelSize: {\r\n                type: Number,\r\n                default: 3\r\n            },\r\n            label: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            description: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            feedback: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            inputSelector: {\r\n                type: String,\r\n                default: 'input,select,textarea,.form-control,.form-control-static,.dropdown,.dropup'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","export default {\r\n    computed: {\r\n        inputClass() {\r\n            return [\r\n                this.size ? `form-control-${this.size}` : null,\r\n                this.state ? `form-control-${this.state}` : null\r\n            ];\r\n        },\r\n        custom() {\r\n            return !this.plain;\r\n        }\r\n    },\r\n    props: {\r\n        name: {\r\n            type: String\r\n        },\r\n        disabled: {\r\n            type: Boolean\r\n        },\r\n        plain: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        state: {\r\n            type: String\r\n        },\r\n        size: {\r\n            type: String\r\n        },\r\n        id: {\r\n            type: String\r\n        }\r\n    }\r\n};\r\n\r\n","export default {\r\n    computed: {\r\n        checkboxClass() {\r\n            return {\r\n                'custom-control': this.custom,\r\n                'form-check-inline': this.inline\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\n","<template>\r\n    <label :class=\"[inputClass,checkboxClass,custom?'custom-checkbox':null]\">\r\n        <input\r\n                type=\"checkbox\"\r\n                :id=\"_id\"\r\n                :name=\"name\"\r\n                :value=\"value\"\r\n                :disabled=\"disabled\"\r\n\r\n                :class=\"[custom?'custom-control-input':null]\"\r\n                :checked=\"checked===value\"\r\n                @change=\"$emit('change',$event.target.checked?value:uncheckedValue)\"\r\n        >\r\n        <span class=\"custom-control-indicator\" v-if=\"custom\"></span>\r\n        <span :class=\"[custom?'custom-control-description':null]\"><slot></slot></span>\r\n    </label>\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import formCheckBoxMixin from '../mixins/form-checkbox';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, formCheckBoxMixin, generateId],\r\n        model: {\r\n            prop: 'checked',\r\n            event: 'change'\r\n        },\r\n        props: {\r\n            value: {\r\n                default: true\r\n            },\r\n            uncheckedValue: {\r\n                default: false\r\n            },\r\n            checked: {\r\n                default: true\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","export default {\r\n    computed: {\r\n        formOptions() {\r\n            let options = this.options || {};\r\n\r\n            if (Array.isArray(options)) {\r\n                // Normalize flat arrays to object Array\r\n                options = options.map(option => {\r\n                    if (typeof option === 'object') {\r\n                        return {\r\n                            value: option[this.valueField],\r\n                            text: option[this.textField],\r\n                            disabled: option.disabled || false\r\n                        };\r\n                    }\r\n\r\n                    return {text: String(option), value: option || {}};\r\n                });\r\n            } else {\r\n                // Normalize Objects keys to Array\r\n                options = Object.keys(options).map(value => {\r\n                    let option = options[value] || {};\r\n\r\n                    // Resolve text\r\n                    if (typeof option !== 'object') {\r\n                        option = {text: String(option)};\r\n                    }\r\n\r\n                    // Resolve value (uses key as value if not provided)\r\n                    option.value = option[this.valueField] || value;\r\n\r\n                    return option;\r\n                });\r\n            }\r\n\r\n            return options;\r\n        },\r\n        selectedValue() {\r\n            const formOptions = this.formOptions;\r\n            for (let i = 0; i < formOptions.length; i++) {\r\n                if (formOptions[i].value === this.localValue) {\r\n                    if (this.returnObject) {\r\n                        return formOptions[i];\r\n                    }\r\n                    return formOptions[i].value;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    props: {\r\n        valueField: {\r\n            type: [String],\r\n            default: 'value'\r\n        },\r\n        textField: {\r\n            type: [String],\r\n            default: 'text'\r\n        }\r\n    },\r\n    watch: {\r\n        localValue(value, old_value) {\r\n            if (value === old_value) {\r\n                return;\r\n            }\r\n            this.$emit('input', this.selectedValue);\r\n        },\r\n        value(value, old_value) {\r\n            if (value === old_value) {\r\n                return;\r\n            }\r\n            this.localValue = value;\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <div :class=\"[inputClass,this.stacked?'custom-controls-stacked':'']\">\r\n        <label :class=\"[checkboxClass,custom?'custom-radio':null]\" v-for=\"option in formOptions\">\r\n            <input\r\n                    v-model=\"localValue\"\r\n                    :class=\"custom?'custom-control-input':null\"\r\n                    type=\"radio\"\r\n                    :value=\"option.value\"\r\n                    :name=\"option.name\"\r\n                    :id=\"option.id\"\r\n                    :disabled=\"option.disabled\"\r\n                    ref=\"inputs\"\r\n            >\r\n\r\n            <span class=\"custom-control-indicator\" v-if=\"custom\"></span>\r\n\r\n            <span :class=\"custom?'custom-control-description':null\" v-html=\"option.text\"></span>\r\n\r\n        </label>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import formOptionsMixin from '../mixins/form-options';\r\n    import formMixin from '../mixins/form';\r\n    import formCheckBoxMixin from '../mixins/form-checkbox';\r\n\r\n    export default {\r\n        mixins: [formMixin, formCheckBoxMixin, formOptionsMixin],\r\n        data() {\r\n            return {\r\n                localValue: this.value\r\n            };\r\n        },\r\n        computed: {\r\n            inputState() {\r\n                return this.state ? `has-${this.state}` : '';\r\n            }\r\n        },\r\n        props: {\r\n            value: {},\r\n            options: {\r\n                type: [Array, Object],\r\n                default: null,\r\n                required: true\r\n            },\r\n            stacked: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            returnObject: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <p :id=\"_id\"\r\n       :class=\"['form-control-static',inputClass]\"\r\n       v-html=\"staticValue\"\r\n    >\r\n        <slot></slot>\r\n    </p>\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, generateId],\r\n        computed: {\r\n            staticValue() {\r\n                return this.formatter ? this.formatter(this.value) : this.value;\r\n            }\r\n        },\r\n        props: {\r\n            value: {\r\n                default: null\r\n            },\r\n            formatter: {\r\n                type: Function\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <input v-if=\"!static\"\r\n           :type=\"type\"\r\n           :value=\"value\"\r\n           :name=\"name\"\r\n           :id=\"_id\"\r\n           :disabled=\"disabled\"\r\n           ref=\"input\"\r\n\r\n           :is=\"textarea?'textarea':'input'\"\r\n           :class=\"['form-control',inputClass]\"\r\n           :rows=\"rows || rowsCount\"\r\n\r\n           :placeholder=\"placeholder\"\r\n\r\n           @input=\"onInput($event.target.value)\"\r\n           @change=\"onChange($event.target.value)\"\r\n           @keyup=\"onKeyUp($event)\"\r\n           @focus=\"$emit('focus')\"\r\n           @blur=\"$emit('blur')\"\r\n    />\r\n    <b-form-input-static v-else\r\n                         :id=\"_id\"\r\n                         :value=\"value\"\r\n                         :formatter=\"formatter\"\r\n    ></b-form-input-static>\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n    import bFormInputStatic from './form-input-static.vue';\r\n\r\n    export default {\r\n        mixins: [formMixin, generateId],\r\n        components: {bFormInputStatic},\r\n        computed: {\r\n            rowsCount() {\r\n                return (this.value || '').toString().split('\\n').length;\r\n            }\r\n        },\r\n        methods: {\r\n            format(value) {\r\n                if (this.formatter) {\r\n                    const formattedValue = this.formatter(value);\r\n                    if (formattedValue !== value) {\r\n                        value = formattedValue;\r\n                        this.$refs.input.value = formattedValue;\r\n                    }\r\n                }\r\n                return value;\r\n            },\r\n            onInput(value) {\r\n                if (!this.lazyFormatter) {\r\n                    value = this.format(value);\r\n                }\r\n                this.$emit('input', value);\r\n            },\r\n            onChange(value) {\r\n                value = this.format(value);\r\n                this.$emit('input', value);\r\n                this.$emit('change', value);\r\n            },\r\n            onKeyUp(e) {\r\n                this.$emit('keyup', e);\r\n            }\r\n        },\r\n        props: {\r\n            value: {\r\n                default: null\r\n            },\r\n            type: {\r\n                type: String,\r\n                default: 'text'\r\n            },\r\n            static: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            placeholder: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            rows: {\r\n                type: Number,\r\n                default: null\r\n            },\r\n            textarea: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            formatter: {\r\n                type: Function\r\n            },\r\n            lazyFormatter: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <label :class=\"[custom?'custom-file':null,inputClass]\"\r\n           @dragover.stop.prevent=\"dragover\"\r\n    >\r\n\r\n        <!-- Drop Here Target -->\r\n        <span class=\"drop-here\"\r\n              v-if=\"dragging\"\r\n              @dragover.stop.prevent=\"dragover\"\r\n              @drop.stop.prevent=\"drop\"\r\n              @dragleave.stop.prevent=\"dragging=false\"\r\n              :data-drop=\"dropLabel\"\r\n        ></span>\r\n\r\n        <!-- Real Form input -->\r\n        <input type=\"file\"\r\n               :name=\"name\"\r\n               :id=\"_id\"\r\n               :disabled=\"disabled\"\r\n               ref=\"input\"\r\n               :accept=\"accept\"\r\n\r\n               class=\"custom-file-input\"\r\n               @change=\"onFileChange\"\r\n               :multiple=\"multiple\"\r\n               :webkitdirectory=\"directory\"\r\n        >\r\n\r\n        <!-- Overlay Labels -->\r\n        <span :class=\"['custom-file-control',dragging?'dragging':null,inputClass]\"\r\n              :data-choose=\"computedChooseLabel\"\r\n              :data-selected=\"selectedLabel\"\r\n              v-if=\"custom\"\r\n        ></span>\r\n\r\n    </label>\r\n</template>\r\n\r\n<style>\r\n    .custom-file-control {\r\n        overflow: hidden;\r\n    }\r\n\r\n    .custom-file-control {\r\n        overflow: hidden;\r\n    }\r\n\r\n    .custom-file-control.dragging {\r\n        overflow: hidden;\r\n        filter: blur(3px);\r\n    }\r\n\r\n    .custom-file-control::after {\r\n        content: attr(data-selected);\r\n    }\r\n\r\n    .custom-file-control::before {\r\n        content: attr(data-choose);\r\n    }\r\n\r\n    .custom-file .drop-here {\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        background-color: rgba(0, 0, 0, .5);\r\n        border-radius: 3px;\r\n        z-index: 99999;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    .custom-file .drop-here::before {\r\n        color: white;\r\n        content: attr(data-drop);\r\n    }\r\n\r\n</style>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, generateId],\r\n        data() {\r\n            return {\r\n                selectedFile: null,\r\n                dragging: false\r\n            };\r\n        },\r\n        computed: {\r\n            selectedLabel() {\r\n                if (!this.selectedFile || this.selectedFile.length === 0) {\r\n                    return this.placeholder || 'No file chosen';\r\n                }\r\n\r\n                if (this.multiple) {\r\n                    if (this.selectedFile.length === 1) {\r\n                        return this.selectedFile[0].name;\r\n                    }\r\n\r\n                    return this.selectedFormat\r\n                        .replace(':names', this.selectedFile.map(file => file.name).join(','))\r\n                        .replace(':count', this.selectedFile.length);\r\n                }\r\n\r\n                return this.selectedFile.name;\r\n            },\r\n            computedChooseLabel() {\r\n                return this.chooseLabel || (this.multiple ? 'Choose Files' : 'Choose File');\r\n            }\r\n        },\r\n        watch: {\r\n            selectedFile(newVal, oldVal) {\r\n                if (newVal === oldVal) {\r\n                    return;\r\n                }\r\n\r\n                if (!newVal && this.multiple) {\r\n                    this.$emit('input', []);\r\n                } else {\r\n                    this.$emit('input', newVal);\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            onFileChange(e) {\r\n                // Always emit original event\r\n                this.$emit('change', e);\r\n\r\n                // Check if special `items` prop is available on event (drop mode)\r\n                // Can be disabled by setting no-traverse\r\n                const items = e.dataTransfer && e.dataTransfer.items;\r\n                if (items && !this.noTraverse) {\r\n                    const queue = [];\r\n                    for (let i = 0; i < items.length; i++) {\r\n                        const item = items[i].webkitGetAsEntry();\r\n                        if (item) {\r\n                            queue.push(this.traverseFileTree(item));\r\n                        }\r\n                    }\r\n                    Promise.all(queue).then(filesArr => {\r\n                        this.setFiles(Array.prototype.concat.apply([], filesArr));\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                // Normal handling\r\n                this.setFiles(e.target.files || e.dataTransfer.files);\r\n            },\r\n            setFiles(files) {\r\n                if (!files) {\r\n                    this.selectedFile = null;\r\n                    return;\r\n                }\r\n\r\n                if (!this.multiple) {\r\n                    this.selectedFile = files[0];\r\n                    return;\r\n                }\r\n\r\n                // Convert files to array\r\n                const filesArray = [];\r\n                for (let i = 0; i < files.length; i++) {\r\n                    if (files[i].type.match(this.accept)) {\r\n                        filesArray.push(files[i]);\r\n                    }\r\n                }\r\n\r\n                this.selectedFile = filesArray;\r\n            },\r\n            dragover(e) {\r\n                if (this.noDrop) {\r\n                    return;\r\n                }\r\n\r\n                this.dragging = true;\r\n                e.dataTransfer.dropEffect = 'copy';\r\n            },\r\n            drop(e) {\r\n                if (this.noDrop) {\r\n                    return;\r\n                }\r\n\r\n                this.dragging = false;\r\n                if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n                    this.onFileChange(e);\r\n                }\r\n            },\r\n            traverseFileTree(item, path) {\r\n                // Based on http://stackoverflow.com/questions/3590058\r\n                return new Promise(resolve => {\r\n                    path = path || '';\r\n                    if (item.isFile) {\r\n                        // Get file\r\n                        item.file(file => {\r\n                            file.$path = path; // Inject $path to file obj\r\n                            resolve(file);\r\n                        });\r\n                    } else if (item.isDirectory) {\r\n                        // Get folder contents\r\n                        item.createReader().readEntries(entries => {\r\n                            const queue = [];\r\n                            for (let i = 0; i < entries.length; i++) {\r\n                                queue.push(this.traverseFileTree(entries[i], path + item.name + '/'));\r\n                            }\r\n                            Promise.all(queue).then(filesArr => {\r\n                                resolve(Array.prototype.concat.apply([], filesArr));\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        props: {\r\n            accept: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            placeholder: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            chooseLabel: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            multiple: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            directory: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            noTraverse: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            selectedFormat: {\r\n                type: String,\r\n                default: ':count Files'\r\n            },\r\n            noDrop: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            dropLabel: {\r\n                type: String,\r\n                default: 'Drop files here'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <select :class=\"[inputClass,custom?'custom-select':null]\"\r\n            :name=\"name\"\r\n            :id=\"_id\"\r\n            v-model=\"localValue\"\r\n            :disabled=\"disabled\"\r\n            ref=\"input\"\r\n    >\r\n        <option v-for=\"option in formOptions\"\r\n                :value=\"option.value\"\r\n                v-html=\"option.text\"\r\n                :disabled=\"option.disabled\"\r\n        ></option>\r\n    </select>\r\n</template>\r\n\r\n<script>\r\n    import formOptions from '../mixins/form-options';\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, formOptions, generateId],\r\n        data() {\r\n            return {\r\n                localValue: this.value\r\n            };\r\n        },\r\n        props: {\r\n            value: {},\r\n            options: {\r\n                type: [Array, Object],\r\n                required: true\r\n            },\r\n            returnObject: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div :class=\"['jumbotron',fluid?'jumbotron-fluid':null]\">\r\n        <div :class=\"containerFluid ? 'container-fluid' : 'container'\">\r\n            <h1 v-if=\"header\" class=\"display-3\" v-html=\"header\"></h1>\r\n            <p v-if=\"lead\" class=\"lead\" v-html=\"lead\"></p>\r\n            <slot></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {},\r\n        props: {\r\n            fluid: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            containerFluid: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            header: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            lead: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n<span :class=\"['badge',badgeVariant,badgePill]\">\n\t<slot></slot>\n</span>\n</template>\n\n<script>\n    export default {\n        computed: {\n            badgeVariant() {\n                return !this.variant || this.variant === `default` ? `badge-default` : `badge-${this.variant}`;\n            },\n            badgePill() {\n                return this.pill ? 'badge-pill' : '';\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            pill: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['list-group',flush?'list-group-flush':null]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            flush: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"myTag\" :class=\"classObject\" ref=\"item\" :to=\"to\" :href=\"href\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    import bLink from './link.vue';\n\n    const actionTags = ['a', 'router-link', 'button', 'b-link'];\n\n    export default {\n        components: {bLink},\n        computed: {\n            classObject() {\n                return [\n                    'list-group-item',\n                    this.listState,\n                    this.active ? 'active' : null,\n                    this.disabled ? 'disabled' : null,\n                    this.isAction ? 'list-group-item-action' : null\n                ];\n            },\n            isAction() {\n                if (this.action === false) {\n                    return false;\n                }\n                return this.action || this.to || this.href || actionTags.indexOf(this.tag) !== -1;\n            },\n            listState() {\n                return this.variant ? `list-group-item-${this.variant}` : null;\n            },\n            myTag() {\n                if (this.tag) {\n                    return this.tag;\n                }\n                return (this.to || this.href) ? 'b-link' : 'div';\n            }\n        },\n        props: {\n            tag: {\n                type: String,\n                default: null\n            },\n            active: {\n                type: Boolean,\n                default: false\n            },\n            action: {\n                type: Boolean,\n                default: null\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            to: {\n                type: String,\n                default: null\n            },\n            href: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"media\">\n        <div :class=\"['d-flex','mr-3',verticalAlignClass]\"  v-if=\"!rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n        <div class=\"media-body\">\n            <slot></slot>\n        </div>\n        <div :class=\"['d-flex','ml-3',verticalAlignClass]\" v-if=\"rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            verticalAlignClass() {\n                return `align-self-${this.verticalAlign}`;\n            }\n        },\n        props: {\n            rightAlign: {\n                type: Boolean,\n                default: false\n            },\n            verticalAlign: {\n                type: String,\n                default: 'top'\n            }\n        }\n    };\n</script>\n","<template>\r\n    <div>\r\n        <transition-group enter-class=\"hidden\"\r\n                          enter-to-class=\"\"\r\n                          enter-active-class=\"\"\r\n                          leave-class=\"show\"\r\n                          leave-active-class=\"\"\r\n                          leave-to-class=\"hidden\"\r\n        >\r\n            <div key=\"modal\" :id=\"id\"\r\n                 v-show=\"is_visible\"\r\n                 :class=\"['modal',{fade: fade, show: is_visible}]\"\r\n                 role=\"dialog\"\r\n                 @click=\"onClickOut($event)\"\r\n                 @keyup.esc=\"onEsc($event)\"\r\n            >\r\n\r\n                <div :class=\"['modal-dialog','modal-'+size]\">\r\n                    <div class=\"modal-content\"\r\n                         tabindex=\"-1\"\r\n                         role=\"document\"\r\n                         ref=\"content\"\r\n                         :aria-labeledby=\"hideHeader ? '' : (id + '_modal_title')\"\r\n                         :aria-describedby=\"id + '_modal_body'\"\r\n                         @click.stop\r\n                    >\r\n\r\n                        <header class=\"modal-header\" v-if=\"!hideHeader\">\r\n                            <slot name=\"modal-header\">\r\n                                <h5 class=\"modal-title\" :id=\"id + '_modal_title'\">\r\n                                    <slot name=\"modal-title\">{{title}}</slot>\r\n                                </h5>\r\n                                <button type=\"button\"\r\n                                        v-if=\"!hideHeaderClose\"\r\n                                        class=\"close\"\r\n                                        :aria-label=\"closeTitle\"\r\n                                        @click=\"hide\"\r\n                                >\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </slot>\r\n                        </header>\r\n\r\n                        <div class=\"modal-body\" :id=\"id + '_modal_body'\">\r\n                            <slot></slot>\r\n                        </div>\r\n\r\n                        <footer class=\"modal-footer\" v-if=\"!hideFooter\">\r\n                            <slot name=\"modal-footer\">\r\n                                <b-btn variant=\"secondary\" @click=\"hide(false)\">{{closeTitle}}</b-btn>\r\n                                <b-btn variant=\"primary\" @click=\"hide(true)\">{{okTitle}}</b-btn>\r\n                            </slot>\r\n                        </footer>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div key=\"modal-backdrop\"\r\n                 :class=\"['modal-backdrop',{fade: fade, show: is_visible}]\"\r\n                 v-if=\"is_visible\"\r\n            ></div>\r\n        </transition-group>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n    .hidden {\r\n        opacity: 0 !important;\r\n    }\r\n\r\n    /* Make modal display as block instead of inline style, and because Vue's v-show deletes inline \"display\" style*/\r\n    .modal {\r\n        display: block;\r\n    }\r\n</style>\r\n\r\n<script>\r\n    import bBtn from './button.vue';\r\n\r\n    export default {\r\n        components: {bBtn},\r\n        data() {\r\n            return {\r\n                is_visible: false\r\n            };\r\n        },\r\n        model: {\r\n            prop: 'visible',\r\n            event: 'change'\r\n        },\r\n        computed: {\r\n            body() {\r\n                if (typeof document !== 'undefined') {\r\n                    return document.querySelector('body');\r\n                }\r\n            }\r\n        },\r\n        watch: {\r\n            visible(new_val, old_val) {\r\n                if (new_val === old_val) {\r\n                    return;\r\n                }\r\n\r\n                if (new_val) {\r\n                    this.show();\r\n                } else {\r\n                    this.hide();\r\n                }\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: 'md'\r\n            },\r\n            fade: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            closeTitle: {\r\n                type: String,\r\n                default: 'Close'\r\n            },\r\n            okTitle: {\r\n                type: String,\r\n                default: 'OK'\r\n            },\r\n            closeOnBackdrop: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            closeOnEsc: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            hideHeader: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hideFooter: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hideHeaderClose: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            show() {\r\n                if (this.is_visible) {\r\n                    return;\r\n                }\r\n                this.is_visible = true;\r\n                this.$root.$emit('shown::modal', this.id);\r\n                this.body.classList.add('modal-open');\r\n                this.$emit('shown');\r\n                this.$emit('change', true);\r\n            },\r\n            hide(isOK) {\r\n                if (!this.is_visible) {\r\n                    return;\r\n                }\r\n\r\n                // Create event object\r\n                let canceled = false;\r\n                const e = {\r\n                    isOK,\r\n                    cancel() {\r\n                        canceled = true;\r\n                    }\r\n                };\r\n\r\n                // Emit events\r\n                this.$emit('change', false);\r\n                this.$emit('hidden', e);\r\n\r\n                if (isOK === true) {\r\n                    this.$emit('ok', e);\r\n                } else if (isOK === false) {\r\n                    this.$emit('cancel', e);\r\n                }\r\n\r\n                // Hide if not canceled\r\n                if (!canceled) {\r\n                    this.is_visible = false;\r\n                    this.$root.$emit('hidden::modal', this.id);\r\n                    this.body.classList.remove('modal-open');\r\n                }\r\n            },\r\n            onClickOut() {\r\n                // If backdrop clicked, hide modal\r\n                if (this.closeOnBackdrop) {\r\n                    this.hide();\r\n                }\r\n            },\r\n            onEsc() {\r\n                // If ESC presses, hide modal\r\n                if (this.is_visible && this.closeOnEsc) {\r\n                    this.hide();\r\n                }\r\n            },\r\n            enforceFocus(e) {\r\n                // If focus leaves modal, bring it back\r\n                // eventListener bound on document\r\n                if (this.is_visible &&\r\n                    document !== e.target &&\r\n                    this.$refs.content &&\r\n                    this.$refs.content !== e.target &&\r\n                    !this.$refs.content.contains(e.target)) {\r\n                    this.$refs.content.focus();\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            this.$root.$on('show::modal', id => {\r\n                if (id === this.id) {\r\n                    this.show();\r\n                }\r\n            });\r\n\r\n            this.$root.$on('hide::modal', id => {\r\n                if (id === this.id) {\r\n                    this.hide();\r\n                }\r\n            });\r\n        },\r\n        mounted() {\r\n            if (typeof document !== 'undefined') {\r\n                document.addEventListener('focus', this.enforceFocus);\r\n            }\r\n\r\n            if (this.visible === true) {\r\n                this.show();\r\n            }\r\n        },\r\n        destroyed() {\r\n            if (typeof document !== 'undefined') {\r\n                document.removeEventListener('focus', this.enforceFocus);\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <component :is=\"type\" :class=\"classObject\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return {\n                nav: true,\n                'navbar-nav': this.isNavBar,\n                'nav-tabs': this.tabs,\n                'nav-pills': this.pills,\n                'flex-column': this.vertical,\n                'nav-fill': this.fill\n            };\n        }\n    },\n    props: {\n        type: {\n            type: String,\n            default: 'ul'\n        },\n        fill: {\n            type: Boolean,\n            default: false\n        },\n        tabs: {\n            type: Boolean,\n            default: false\n        },\n        pills: {\n            type: Boolean,\n            default: false\n        },\n        vertical: {\n            type: Boolean,\n            default: false\n        },\n        isNavBar: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\r\n    <li class=\"nav-item\" @click=\"onclick\">\r\n        <b-link :class=\"classObject\"\r\n                :to=\"to\"\r\n                :href=\"href\"\r\n                :exact=\"exact\"\r\n                :disabled=\"disabled\"\r\n        >\r\n            <slot></slot>\r\n        </b-link>\r\n    </li>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        components: {bLink},\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'nav-link',\r\n                    this.active ? 'active' : '',\r\n                    this.disabled ? 'disabled' : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            active: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            to: {\r\n                type: [String, Object]\r\n            },\r\n            href: {\r\n                type: String\r\n            },\r\n            exact: {\r\n                type: Boolean\r\n            }\r\n        },\r\n        methods: {\r\n            onclick(e) {\r\n                // Hide all drop-downs including navbar-toggle\r\n                this.$root.$emit('shown::dropdown', this);\r\n                this.$emit('click', e);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <li :class=\"['nav-item','dropdown', {dropup, show: visible}]\">\r\n\r\n        <a :class=\"['nav-link', dropdownToggle, {disabled}]\"\r\n           href=\"\"\r\n           ref=\"button\"\r\n           aria-haspopup=\"true\"\r\n           :aria-expanded=\"visible\"\r\n           :disabled=\"disabled\"\r\n           @click.stop.prevent=\"toggle($event)\"\r\n        >\r\n            <slot name=\"text\"><span v-html=\"text\"></span></slot>\r\n        </a>\r\n\r\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\r\n             role=\"menu\"\r\n             ref=\"menu\"\r\n             :aria-labelledby=\"'b_dropdown_button_' + _uid\"\r\n             @keyup.esc=\"onEsc\"\r\n             @keydown.tab=\"onTab\"\r\n             @keydown.up=\"focusNext($event,true)\"\r\n             @keydown.down=\"focusNext($event,false)\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n    </li>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n    import dropdown from '../mixins/dropdown';\r\n\r\n    export default {\r\n        mixins: [\r\n            clickOut,\r\n            dropdown\r\n        ],\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        computed: {\r\n            dropdownToggle() {\r\n                return this.caret ? 'dropdown-toggle' : '';\r\n            }\r\n        },\r\n        props: {\r\n            caret: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            class: ['class']\r\n        },\r\n        methods: {\r\n            clickOutListener() {\r\n                this.visible = false;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n    <button :class=\"classObject\"\n            type=\"button\"\n            :aria-label=\"label\"\n            @click=\"onclick\"\n    >\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return [\n                'navbar-toggler',\n                'navbar-toggler-' + this.position\n            ];\n        }\n    },\n\n    props: {\n        label: {\n            type: String,\n            default: 'Toggle navigation'\n        },\n        position: {\n            type: String,\n            default: 'right'\n        },\n        target: {\n            required: true\n        }\n    },\n\n    methods: {\n        onclick() {\n            const target = this.target;\n            if (target.toggle) {\n                target.toggle();\n            }\n            this.$root.$emit('collapse::toggle', this.target);\n        }\n    }\n};\n</script>\n","<template>\n    <nav :class=\"classObject\">\n        <slot></slot>\n    </nav>\n</template>\n\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'navbar',\n                    this.type ? `navbar-${this.type}` : null,\n                    this.variant ? `bg-${this.variant}` : null,\n                    this.fixed ? `fixed-${this.fixed}` : null,\n                    this.sticky ? 'sticky-top' : null,\n                    this.toggleable ? `navbar-toggleable-${this.toggleBreakpoint}` : null\n                ];\n            }\n        },\n        props: {\n            type: {\n                type: String,\n                default: 'light'\n            },\n            variant: {\n                type: String\n            },\n            toggleable: {\n                type: Boolean,\n                default: false\n            },\n            toggleBreakpoint: {\n                type: String,\n                default: 'sm'\n            },\n            fixed: {\n                type: String\n            },\n            sticky: {\n                type: String\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"btn-group pagination\" role=\"group\" aria-label=\"Pagination\">\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize]\"\n                :disabled=\"currentPage == 1 \"\n                @click.prevent=\"(currentPage == 1) ? _return : currentPage--\">\n            <span aria-hidden=\"true\">&laquo;</span>\n        </button>\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize,currentPage === 1 ?  'active' : '']\"\n                @click.prevent=\"currentPage = 1\"\n                v-show=\"showPrev\">1\n        </button>\n\n        <span :class=\"['btn','btn-'+secondaryVariant,btnSize]\" v-show=\"showPrev\">...</span>\n\n        <button type=\"button\"\n                :class=\"['btn',\n                btnSize,\n                btnVariant(index),\n                index + diff === currentPage ? 'active' : '',\n                index + diff !== currentPage ? 'hidden-xs-down' : '']\"\n                v-for=\"(item,index) in pageLinks\"\n                @click.prevent=\"currentPage = index + diff\">{{index + diff}}\n        </button>\n\n        <span :class=\"['btn','btn-'+secondaryVariant,btnSize]\" v-show=\"showNext\">...</span>\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize,numberOfPages === currentPage ? 'active' : '']\"\n                v-show=\"showNext\"\n                @click.prevent=\"currentPage = numberOfPages\">{{numberOfPages}}\n        </button>\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize]\"\n                :disabled=\"currentPage == numberOfPages\"\n                @click.prevent=\"(currentPage == numberOfPages) ? _return : currentPage++\">\n            <span aria-hidden=\"true\">&raquo;</span>\n        </button>\n\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                diff: 1,\n                showPrev: false,\n                showNext: false,\n                currentPage: this.value\n            };\n        },\n        computed: {\n            numberOfPages() {\n                const result = Math.ceil(this.totalRows / this.perPage);\n                return (result < 1) ? 1 : result;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            pageLinks() {\n                let result = this.limit;\n                if (this.currentPage > this.numberOfPages) {\n                    this.currentPage = 1;\n                }\n                this.diff = 1;\n                this.showPrev = false;\n                this.showNext = false;\n                // If less pages than limit just show this pages\n                if (this.numberOfPages <= this.limit) {\n                    return this.numberOfPages;\n                }\n                // If at the beggining of the list or at the end show full number of pages within limit - 2\n                // -2 is reserves space for two buttons: \"...\" and \"first/last button\"\n                if (this.currentPage <= this.limit - 2) {\n                    this.diff = 1;\n                    this.showNext = true;\n                    result = this.limit - 2;\n                }\n                // At the end of the range\n                if (this.currentPage > this.numberOfPages - this.limit + 2) {\n                    this.diff = this.numberOfPages - this.limit + 3;\n                    this.showPrev = true;\n                    result = this.limit - 2;\n                }\n                // If somehere in the middle show just limit - 4 links in the middle and one button on the left with \"...\" and on button on the right preceeded with \"...\"\n                if (this.currentPage >= this.limit - 2 && this.currentPage <= this.numberOfPages - this.limit + 2) {\n                    this.diff = this.currentPage - 1;\n                    this.showPrev = true;\n                    this.showNext = true;\n                    result = this.limit - 4;\n                }\n                return result;\n            }\n        },\n        methods: {\n            btnVariant(index) {\n                return (index + this.diff === this.currentPage) ? `btn-${this.variant}` : `btn-${this.secondaryVariant}`;\n            },\n            _return() {\n\n            }\n        },\n        watch: {\n            currentPage(newPage) {\n                this.$emit('input', newPage);\n            },\n            value(newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    this.currentPage = newValue;\n                }\n            }\n        },\n        props: {\n            value: {\n                type: Number,\n                default: 1\n            },\n            limit: {\n                type: Number,\n                default: 7\n            },\n            perPage: {\n                type: Number,\n                default: 20\n            },\n            totalRows: {\n                type: Number,\n                default: 20\n            },\n            size: {\n                type: String,\n                default: 'md'\n            },\n            variant: {\n                type: String,\n                default: 'primary'\n            },\n            secondaryVariant: {\n                type: String,\n                default: 'secondary'\n            }\n        }\n    };\n\n</script>\n","<template>\r\n    <div>\r\n        <span ref=\"trigger\"><slot></slot></span>\r\n\r\n        <div tabindex=\"-1\" class=\"popover fade\" :class=\"[classState ? 'show' : '', popoverAlignment]\" ref=\"popover\" @focus=\"$emit('focus')\"\r\n             @blur=\"$emit('blur')\" :style=\"popoverStyle\">\r\n            <div class=\"popover-arrow\"></div>\r\n            <h3 class=\"popover-title\" v-if=\"title\" v-html=\"title\"></h3>\r\n            <div class=\"popover-content\">\r\n                <div class=\"popover-content-wrapper\">\r\n                    <slot name=\"content\"><span v-html=\"content\"></span></slot>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Tether from 'tether';\r\n\r\n    // Controls which events are mapped for each named trigger, and the expected popover behavior for each.\r\n    const TRIGGER_LISTENERS = {\r\n        click: {click: 'toggle'},\r\n        hover: {mouseenter: 'show', mouseleave: 'hide'},\r\n        focus: {focus: 'show', blur: 'hide'}\r\n    };\r\n\r\n    const PLACEMENT_PARAMS = {\r\n        top: 'bottom center',\r\n        bottom: 'top center',\r\n        left: 'middle right',\r\n        right: 'middle left'\r\n    };\r\n\r\n    const TETHER_CLASS_PREFIX = 'bs-tether';\r\n\r\n    const TETHER_CLASSES = {\r\n        element: false,\r\n        enabled: false\r\n    };\r\n\r\n    const TRANSITION_DURATION = 150;\r\n\r\n    export default {\r\n        props: {\r\n            constraints: {\r\n                type: Array,\r\n                default() {\r\n                    return [];\r\n                }\r\n            },\r\n            content: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            debounce: {\r\n                type: [Number],\r\n                default: 300,\r\n                validator(value) {\r\n                    return value >= 0;\r\n                }\r\n            },\r\n            delay: {\r\n                type: [Number, Object],\r\n                default: 0,\r\n                validator(value) {\r\n                    if (typeof value === 'number') {\r\n                        return value >= 0;\r\n                    } else if (value !== null && typeof value === 'object') {\r\n                        return typeof value.show === 'number' &&\r\n                            typeof value.hide === 'number' &&\r\n                            value.show >= 0 &&\r\n                            value.hide >= 0;\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            },\r\n            offset: {\r\n                type: String,\r\n                default: '0 0',\r\n                validator(value) {\r\n                    // Regex test for a pair of units, either 0 exactly, px, or percentage\r\n                    return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\r\n                }\r\n            },\r\n            placement: {\r\n                type: String,\r\n                default: 'top',\r\n                validator(value) {\r\n                    return Object.keys(PLACEMENT_PARAMS).indexOf(value) !== -1;\r\n                }\r\n            },\r\n            popoverStyle: {\r\n                type: Object,\r\n                default: null\r\n            },\r\n            show: {\r\n                type: Boolean,\r\n                default: null\r\n            },\r\n            targetOffset: {\r\n                type: String,\r\n                default: '0 0',\r\n                validator(value) {\r\n                    // Regex test for a pair of units, either 0 exactly, px, or percentage\r\n                    return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\r\n                }\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            triggers: {\r\n                type: [Boolean, String, Array],\r\n                default: () => ['click', 'focus'],\r\n                validator(value) {\r\n                    // Allow falsy value to disable all event triggers (equivalent to 'manual') in Bootstrap 4\r\n                    if (value === false || value === '') {\r\n                        return true;\r\n                    } else if (typeof value === 'string') {\r\n                        return Object.keys(TRIGGER_LISTENERS).indexOf(value) !== -1;\r\n                    } else if (Array.isArray(value)) {\r\n                        const keys = Object.keys(TRIGGER_LISTENERS);\r\n                        value.forEach(item => {\r\n                            if (keys.indexOf(item) === -1) {\r\n                                return false;\r\n                            }\r\n                        });\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n            }\r\n        },\r\n\r\n        data() {\r\n            return {\r\n                triggerState: this.show,\r\n                classState: this.show,\r\n                lastEvent: null\r\n            };\r\n        },\r\n\r\n        computed: {\r\n            /**\r\n             * Arrange event trigger hooks as array for all input types.\r\n             *\r\n             * @return Array\r\n             */\r\n            normalizedTriggers() {\r\n                if (this.triggers === false) {\r\n                    return [];\r\n                } else if (typeof this.triggers === 'string') {\r\n                    return [this.triggers];\r\n                }\r\n                return this.triggers;\r\n            },\r\n\r\n            /**\r\n             * Class property to be used for Popover rendering\r\n             *\r\n             * @return String\r\n             */\r\n            popoverAlignment() {\r\n                return !this.placement || this.placement === `default` ? `popover-top` : `popover-${this.placement}`;\r\n            },\r\n\r\n            /**\r\n             * Determine if the Popover should be shown.\r\n             *\r\n             * @return Boolean\r\n             */\r\n            showState() {\r\n                return this.show !== false && (this.triggerState || this.show);\r\n            }\r\n        },\r\n\r\n        watch: {\r\n            /**\r\n             * Refresh Tether display properties\r\n             */\r\n            constraints() {\r\n                this.setOptions();\r\n            },\r\n\r\n            /**\r\n             * Refresh Popover event triggers\r\n             * @param {Array} newTriggers\r\n             * @param {Array} oldTriggers\r\n             */\r\n            normalizedTriggers(newTriggers, oldTriggers) {\r\n                this.updateListeners(newTriggers, oldTriggers);\r\n            },\r\n\r\n            /**\r\n             * Refresh Tether display properties\r\n             */\r\n            offset() {\r\n                this.setOptions();\r\n            },\r\n\r\n            /**\r\n             * Refresh Tether display properties\r\n             */\r\n            placement() {\r\n                this.setOptions();\r\n            },\r\n\r\n            /**\r\n             * Affect 'show' state in response to status change\r\n             * @param  {Boolean} val\r\n             */\r\n            showState(val) {\r\n                const delay = this.getDelay(val);\r\n\r\n                clearTimeout(this._timeout);\r\n\r\n                if (delay) {\r\n                    this._timeout = setTimeout(() => this.togglePopover(val), delay);\r\n                } else {\r\n                    this.togglePopover(val);\r\n                }\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            /**\r\n             * Add all event hooks for the given trigger\r\n             * @param {String} trigger\r\n             */\r\n            addListener(trigger) {\r\n                // eslint-disable-next-line guard-for-in\r\n                for (const item in TRIGGER_LISTENERS[trigger]) {\r\n                    this._trigger.addEventListener(item, e => this.eventHandler(e));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Tidy removal of Tether object from the DOM\r\n             */\r\n            destroyTether() {\r\n                if (this._tether && !this.showState) {\r\n                    this._tether.destroy();\r\n                    this._tether = null;\r\n\r\n                    const regx = new RegExp('(^|[^-]\\\\b)(' + TETHER_CLASS_PREFIX + '\\\\S*)', 'g');\r\n                    this._trigger.className = this._trigger.className.replace(regx, '');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Handle multiple event triggers\r\n             * @param  {Object} e\r\n             */\r\n            eventHandler(e) {\r\n                // If this event is right after a previous successful event, ignore it (debounce)\r\n                if (this.normalizedTriggers.length > 1 && this.debounce > 0 && this.lastEvent !== null && e.timeStamp <= this.lastEvent + this.debounce) {\r\n                    return;\r\n                }\r\n\r\n                // Look up the expected popover action for the event\r\n                // eslint-disable-next-line guard-for-in\r\n                for (const trigger in TRIGGER_LISTENERS) {\r\n                    for (const event in TRIGGER_LISTENERS[trigger]) {\r\n                        if (event === e.type) {\r\n                            const action = TRIGGER_LISTENERS[trigger][event];\r\n\r\n                            // If the expected event action is the opposite of the current state, allow it\r\n                            if (action === 'toggle' || (this.triggerState && action === 'hide') || (!this.triggerState && action === 'show')) {\r\n                                this.triggerState = !this.triggerState;\r\n                                this.lastEvent = e.timeStamp;\r\n                            }\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Get the currently applicable popover delay\r\n             *\r\n             * @returns Number\r\n             */\r\n            getDelay(state) {\r\n                if (typeof this.delay === 'object') {\r\n                    return state ? this.delay.show : this.delay.hide;\r\n                }\r\n\r\n                return this.delay;\r\n            },\r\n\r\n            /**\r\n             * Tether construct params for each show event.\r\n             *\r\n             * @return Object\r\n             */\r\n            getTetherOptions() {\r\n                return {\r\n                    attachment: PLACEMENT_PARAMS[this.placement],\r\n                    element: this._popover,\r\n                    target: this._trigger,\r\n                    classes: TETHER_CLASSES,\r\n                    classPrefix: TETHER_CLASS_PREFIX,\r\n                    offset: this.offset,\r\n                    constraints: this.constraints,\r\n                    targetOffset: this.targetOffset\r\n                };\r\n            },\r\n\r\n            /**\r\n             * Hide popover and fire event\r\n             */\r\n            hidePopover() {\r\n                this.classState = false;\r\n                clearTimeout(this._timeout);\r\n                this._timeout = setTimeout(() => {\r\n                    this._popover.style.display = 'none';\r\n                    this.destroyTether();\r\n                }, TRANSITION_DURATION);\r\n            },\r\n\r\n            /**\r\n             * Refresh the Popover position in order to respond to changes\r\n             */\r\n            refreshPosition() {\r\n                if (this._tether) {\r\n                    this.$nextTick(() => {\r\n                        this._tether.position();\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Remove all event hooks for the given trigger\r\n             * @param {String} trigger\r\n             */\r\n            removeListener(trigger) {\r\n                // eslint-disable-next-line guard-for-in\r\n                for (const item in TRIGGER_LISTENERS[trigger]) {\r\n                    this._trigger.removeEventListener(item, e => this.eventHandler(e));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Update tether options\r\n             */\r\n            setOptions() {\r\n                if (this._tether) {\r\n                    this._tether.setOptions(this.getTetherOptions());\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Display popover and fire event\r\n             */\r\n            showPopover() {\r\n                clearTimeout(this._timeout);\r\n\r\n                if (!this._tether) {\r\n                    this._tether = new Tether(this.getTetherOptions());\r\n                }\r\n                this._popover.style.display = 'block';\r\n\r\n                // Make sure the popup is rendered in the correct location\r\n                this.refreshPosition();\r\n\r\n                this.$nextTick(() => {\r\n                    this.classState = true;\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Handle Popover show or hide instruction\r\n             */\r\n            togglePopover(newShowState) {\r\n                this.$emit('showChange', newShowState);\r\n                if (newShowState) {\r\n                    this.showPopover();\r\n                    this.$root.$emit('shown::popover');\r\n                } else {\r\n                    this.hidePopover();\r\n                    this.$root.$emit('hidden::popover');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Study the 'triggers' component property and apply all selected triggers\r\n             * @param {Array} triggers\r\n             * @param {Array} appliedTriggers\r\n             */\r\n            updateListeners(triggers, appliedTriggers = []) {\r\n                const newTriggers = [];\r\n                const removeTriggers = [];\r\n\r\n                // Look for new events not yet mapped (all of them on first load)\r\n                triggers.forEach(item => {\r\n                    if (appliedTriggers.indexOf(item) === -1) {\r\n                        newTriggers.push(item);\r\n                    }\r\n                });\r\n\r\n                // Disable any removed event triggers\r\n                appliedTriggers.forEach(item => {\r\n                    if (triggers.indexOf(item) === -1) {\r\n                        removeTriggers.push(item);\r\n                    }\r\n                });\r\n\r\n                // Apply trigger mapping changes\r\n                newTriggers.forEach(item => this.addListener(item));\r\n                removeTriggers.forEach(item => this.removeListener(item));\r\n            }\r\n        },\r\n\r\n        created() {\r\n            this.$root.$on('hide::popover', () => {\r\n                this.triggerState = false;\r\n            });\r\n        },\r\n\r\n        mounted() {\r\n            // Configure tether\r\n            this._trigger = this.$refs.trigger.children[0];\r\n            this._popover = this.$refs.popover;\r\n            this._popover.style.display = 'none';\r\n            this._timeout = 0;\r\n\r\n            // Add listeners for specified triggers and complementary click event\r\n            this.updateListeners(this.normalizedTriggers);\r\n\r\n            // Display popover if prop is set on load\r\n            if (this.showState) {\r\n                this.showPopover();\r\n            }\r\n        },\r\n\r\n        updated() {\r\n            this.refreshPosition();\r\n        },\r\n\r\n        beforeDestroy() {\r\n            this.normalizedTriggers.forEach(item => this.removeListener(item));\r\n            clearTimeout(this._timeout);\r\n            this.destroyTether();\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <div class=\"progress\">\n        <transition>\n            <div role=\"progressbar\"\n                 :class=\"classObject\"\n                 :aria-valuenow=\"value\"\n                 :aria-valuemin=\"0\"\n                 :aria-valuemax=\"max\"\n                 :style=\"styleObject\"\n            >\n                <slot>\n                    <template v-if=\"showProgress\">{{progress}}%</template>\n                    <template v-else-if=\"showValue\">{{value}}</template>\n                </slot>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<style>\n    .progress-bar {\n        transition: all .5s;\n    }\n</style>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'progress-bar',\n                    this.progressVariant,\n                    (this.striped || this.animated) ? 'progress-bar-striped' : '',\n                    this.animated ? 'progress-bar-animated' : ''\n                ];\n            },\n            styleObject() {\n                return {\n                    width: this.progress + '%'\n                };\n            },\n            progressVariant() {\n                return this.variant ? `bg-${this.variant}` : null;\n            },\n            progress() {\n                const p = Math.pow(10, this.precision);\n                return Math.round((100 * p * this.value) / this.max) / p;\n            }\n        },\n        props: {\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            animated: {\n                type: Boolean,\n                default: false\n            },\n            precision: {\n                type: Number,\n                default: 0\n            },\n            value: {\n                type: Number,\n                default: 0\n            },\n            max: {\n                type: Number,\n                default: 100\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            showProgress: {\n                type: Boolean,\n                default: false\n            },\n            showValue: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\r\n    <table :class=\"['table',striped?'table-striped':'',hover?'table-hover':'']\">\r\n        <thead>\r\n        <tr>\r\n            <th @click=\"headClick(field,key)\"\r\n                :class=\"[field.sortable?'sorting':null,sortBy===key?'sorting_'+(sortDesc?'desc':'asc'):'',field.class?field.class:null]\"\r\n                v-for=\"field,key in fields\"\r\n                v-html=\"field.label\"\r\n            ></th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr v-for=\"(item,index) in _items\" :key=\"items_key\" :class=\"[item.state?'table-'+item.state:null]\" @click=\"rowClicked(item, index)\">\r\n            <td v-for=\"(field,key) in fields\" :class=\"[field.class?field.class:null]\">\r\n                <slot :name=\"key\" :value=\"item[key]\" :item=\"item\" :index=\"index\">{{item[key]}}</slot>\r\n            </td>\r\n        </tr>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script>\r\n    import bPagination from './pagination.vue';\r\n\r\n    const toString = v => {\r\n        if (!v) {\r\n            return '';\r\n        }\r\n\r\n        if (v instanceof Object) {\r\n            return Object.keys(v).map(k => toString(v[k])).join(' ');\r\n        }\r\n\r\n        return String(v);\r\n    };\r\n\r\n    const defaultSortCompare = (a, b, sortBy) => {\r\n        return toString(a[sortBy]).localeCompare(toString(b[sortBy]), undefined, {numeric: true});\r\n    };\r\n\r\n    export default {\r\n        components: {bPagination},\r\n        data() {\r\n            return {\r\n                sortBy: null,\r\n                sortDesc: true\r\n            };\r\n        },\r\n        props: {\r\n            items: {\r\n                type: Array,\r\n                default: () => []\r\n            },\r\n            fields: {\r\n                type: Object,\r\n                default: () => {\r\n                }\r\n            },\r\n            striped: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hover: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            perPage: {\r\n                type: Number,\r\n                default: null\r\n            },\r\n            items_key: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            currentPage: {\r\n                type: Number,\r\n                default: 1\r\n            },\r\n            filter: {\r\n                type: [String, RegExp, Function],\r\n                default: null\r\n            },\r\n            sortCompare: {\r\n                type: Function,\r\n                default: null\r\n            },\r\n            itemsProvider: {\r\n                type: Function,\r\n                default: null\r\n            },\r\n            value: {\r\n                type: Array,\r\n                default: () => []\r\n            }\r\n        },\r\n\r\n        computed: {\r\n            _items() {\r\n                if (!this.items) {\r\n                    return [];\r\n                }\r\n\r\n                if (this.itemsProvider) {\r\n                    return this.itemsProvider(this);\r\n                }\r\n\r\n                let items = this.items.slice();\r\n\r\n                // Apply filter\r\n                if (this.filter) {\r\n                    if (this.filter instanceof Function) {\r\n                        items = items.filter(this.filter);\r\n                    } else {\r\n                        let regex;\r\n                        if (this.filter instanceof RegExp) {\r\n                            regex = this.filter;\r\n                        } else {\r\n                            regex = new RegExp('.*' + this.filter + '.*', 'ig');\r\n                        }\r\n                        items = items.filter(item => {\r\n                            const test = regex.test(toString(item));\r\n                            regex.lastIndex = 0;\r\n                            return test;\r\n                        });\r\n                    }\r\n                }\r\n\r\n                // Apply Sort\r\n                const sortCompare = this.sortCompare || defaultSortCompare;\r\n                if (this.sortBy) {\r\n                    items = items.sort((a, b) => {\r\n                        const r = sortCompare(a, b, this.sortBy);\r\n                        return this.sortDesc ? r : r * -1;\r\n                    });\r\n                }\r\n\r\n                this.$emit('input', items);\r\n\r\n                // Apply pagination\r\n                if (this.perPage) {\r\n                    items = items.slice((this.currentPage - 1) * this.perPage, this.currentPage * this.perPage);\r\n                }\r\n                return items;\r\n            }\r\n        },\r\n        methods: {\r\n            rowClicked(item, index) {\r\n                this.$emit('row-clicked', item, index);\r\n            },\r\n            headClick(field, key) {\r\n                if (!field.sortable) {\r\n                    this.sortBy = null;\r\n                    return;\r\n                }\r\n\r\n                if (key === this.sortBy) {\r\n                    this.sortDesc = !this.sortDesc;\r\n                }\r\n\r\n                this.sortBy = key;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n\r\n<style>\r\n    /* https://cdn.datatables.net/1.10.13/css/dataTables.bootstrap4.css */\r\n\r\n    table thead > tr > th.sorting_asc, table thead > tr > th.sorting_desc, table thead > tr > th.sorting,\r\n    table thead > tr > td.sorting_asc,\r\n    table thead > tr > td.sorting_desc,\r\n    table thead > tr > td.sorting {\r\n        padding-right: 30px;\r\n    }\r\n\r\n    table thead > tr > th:active,\r\n    table thead > tr > td:active {\r\n        outline: none;\r\n    }\r\n\r\n    table thead .sorting,\r\n    table thead .sorting_asc,\r\n    table thead .sorting_desc,\r\n    table thead .sorting_asc_disabled,\r\n    table thead .sorting_desc_disabled {\r\n        cursor: pointer;\r\n        position: relative;\r\n    }\r\n\r\n    table thead .sorting:before, table thead .sorting:after,\r\n    table thead .sorting_asc:before,\r\n    table thead .sorting_asc:after,\r\n    table thead .sorting_desc:before,\r\n    table thead .sorting_desc:after,\r\n    table thead .sorting_asc_disabled:before,\r\n    table thead .sorting_asc_disabled:after,\r\n    table thead .sorting_desc_disabled:before,\r\n    table thead .sorting_desc_disabled:after {\r\n        position: absolute;\r\n        bottom: 0.9em;\r\n        display: block;\r\n        opacity: 0.3;\r\n    }\r\n\r\n    table thead .sorting:before,\r\n    table thead .sorting_asc:before,\r\n    table thead .sorting_desc:before,\r\n    table thead .sorting_asc_disabled:before,\r\n    table thead .sorting_desc_disabled:before {\r\n        right: 1em;\r\n        content: \"\\2191\";\r\n    }\r\n\r\n    table thead .sorting:after,\r\n    table thead .sorting_asc:after,\r\n    table thead .sorting_desc:after,\r\n    table thead .sorting_asc_disabled:after,\r\n    table thead .sorting_desc_disabled:after {\r\n        right: 0.5em;\r\n        content: \"\\2193\";\r\n    }\r\n\r\n    table thead .sorting_asc:before,\r\n    table thead .sorting_desc:after {\r\n        opacity: 1;\r\n    }\r\n\r\n    table thead .sorting_asc_disabled:before,\r\n    table thead .sorting_desc_disabled:after {\r\n        opacity: 0;\r\n    }\r\n</style>\r\n","<template>\r\n    <div class=\"tabs\">\r\n        <div v-if=\"bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\r\n            <slot></slot>\r\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\r\n        </div>\r\n\r\n        <div :class=\"{'card-header': card}\">\r\n            <ul :class=\"['nav','nav-' + navStyle, card? 'card-header-'+navStyle: null]\">\r\n                <li class=\"nav-item\" v-for=\"(tab, index) in tabs\">\r\n                    <a :class=\"['nav-link',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\r\n                       :href=\"tab.href\"\r\n                       @click.prevent.stop=\"setTab(index)\"\r\n                       v-if=\"!tab.headHtml\"\r\n                        v-html=\"tab.title\"\r\n                    ></a>\r\n                    <div :class=\"['tab-head',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\r\n                         v-else\r\n                         v-html=\"tab.headHtml\"></div>\r\n                </li>\r\n                <slot name=\"tabs\"></slot>\r\n            </ul>\r\n        </div>\r\n\r\n        <div v-if=\"!bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\r\n            <slot></slot>\r\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import observeDom from '../utils/observe-dom';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                currentTab: this.value,\r\n                tabs: []\r\n            };\r\n        },\r\n        props: {\r\n            noFade: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            card: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            small: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            value: {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n            pills: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            lazy: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            bottom: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        watch: {\r\n            currentTab(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.$root.$emit('changed::tab', this, val, this.tabs[val]);\r\n                this.$emit('input', val);\r\n                this.tabs[val].$emit('click');\r\n            },\r\n            value(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.setTab(val);\r\n            },\r\n            fade(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.tabs.forEach(item => {\r\n                    this.$set(item, 'fade', val);\r\n                });\r\n            }\r\n        },\r\n        computed: {\r\n            fade() {\r\n                return !this.noFade;\r\n            },\r\n            navStyle() {\r\n                return this.pills ? 'pills' : 'tabs';\r\n            }\r\n        },\r\n        methods: {\r\n            /**\r\n             * Move to next tab\r\n             */\r\n            nextTab() {\r\n                this.setTab(this.currentTab + 1);\r\n            },\r\n\r\n            /**\r\n             * Move to previous tab\r\n             */\r\n            previousTab() {\r\n                this.setTab(this.currentTab - 1);\r\n            },\r\n\r\n            /**\r\n             * Set active tab on the tabs collection and the child 'tab' component\r\n             */\r\n            setTab(index, force) {\r\n                // Prevent setting same tab!\r\n                if (!force && index === this.currentTab) {\r\n                    return;\r\n                }\r\n\r\n                const tab = this.tabs[index];\r\n\r\n                // Don't go beyond indexes!\r\n                if (!tab) {\r\n                    return;\r\n                }\r\n\r\n                // Ignore disabled\r\n                if (tab.disabled) {\r\n                    return;\r\n                }\r\n\r\n                // Deactivate previous active tab\r\n                if (this.tabs[this.currentTab]) {\r\n                    this.$set(this.tabs[this.currentTab], 'localActive', false);\r\n                }\r\n\r\n                // Set new tab as active\r\n                this.$set(tab, 'localActive', true);\r\n\r\n                // Update currentTab\r\n                this.currentTab = index;\r\n            },\r\n\r\n            /**\r\n             * Dynamically update tabs\r\n             */\r\n            updateTabs() {\r\n                // Probe tabs\r\n                if (this.$slots.default) {\r\n                    this.tabs = this.$slots.default.filter(tab => tab.componentInstance || false)\r\n                        .map(tab => tab.componentInstance);\r\n                } else {\r\n                    this.tabs = [];\r\n                }\r\n\r\n                this.tabs.forEach(tab => {\r\n                    this.$set(tab, 'fade', this.fade);\r\n                    this.$set(tab, 'lazy', this.lazy);\r\n                });\r\n\r\n                // Set initial active tab\r\n                let tabIndex = this.currentTab;\r\n\r\n                if (this.currentTab === null || this.currentTab === undefined) {\r\n                    this.tabs.forEach((tab, index) => {\r\n                        if (tab.active) {\r\n                            tabIndex = index;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // Workaround to fix problem when currentTab is removed\r\n                if (tabIndex > this.tabs.length - 1) {\r\n                    tabIndex = this.tabs.length - 1;\r\n                }\r\n\r\n                this.setTab(tabIndex || 0, true);\r\n            }\r\n        },\r\n        mounted() {\r\n            this.updateTabs();\r\n\r\n            // Observe Child changes so we can notify tabs change\r\n            observeDom(this.$refs.tabsContainer, this.updateTabs.bind(this), {subtree: false});\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <transition @enter=\"enter\" @before-leave=\"beforeLeave\" mode=\"out-in\">\r\n        <div role=\"tabpanel\"\r\n             class=\"tab-pane\"\r\n             :class=\"[{show, fade, disabled, active: localActive}]\"\r\n             v-if=\"localActive || !lazy\"\r\n             v-show=\"localActive || lazy\"\r\n             ref=\"panel\">\r\n             <slot></slot>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        methods: {\r\n            enter() {\r\n                this.show = true;\r\n            },\r\n            beforeLeave() {\r\n                this.show = false;\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                fade: false,\r\n                localActive: false,\r\n                lazy: true,\r\n                show: false\r\n            };\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            headHtml: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            active: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            href: {\r\n                type: String,\r\n                default: '#'\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <div>\n        <span ref=\"trigger\"><slot></slot></span>\n        <div tabindex=\"-1\" :class=\"['tooltip','tooltip-' + this.placement]\"\n             ref=\"popover\" @focus=\"$emit('focus')\" @blur=\"$emit('blur')\"\n             :style=\"{opacity:showState?1:0}\"\n        >\n            <div class=\"tooltip-inner\">\n                <slot name=\"content\"><span v-html=\"content || title\"></span></slot>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n    .tooltip {\n        display: block !important;\n        transition: all 0.3s;\n    }\n</style>\n\n<script>\n    import bPopover from './popover.vue';\n\n    export default {\n        extends: bPopover,\n        props: {\n            triggers: {\n                type: [Boolean, String, Array],\n                default: 'hover'\n            }\n        }\n    };\n</script>\n","import target from './_target';\r\n\r\nconst listen_types = {click: true};\r\n\r\nexport default {\r\n    bind(el, binding) {\r\n        target(el, binding, listen_types, ({targets, vm}) => {\r\n            targets.forEach(target => {\r\n                vm.$root.$emit('collapse::toggle', target);\r\n            });\r\n        });\r\n    }\r\n};\r\n","import target from './_target';\r\n\r\nconst listen_types = {click: true};\r\n\r\nexport default {\r\n    bind(el, binding) {\r\n        target(el, binding, listen_types, ({targets, vm}) => {\r\n            targets.forEach(target => {\r\n                vm.$root.$emit('show::modal', target);\r\n            });\r\n        });\r\n    }\r\n};\r\n","import * as components from './components';\nimport * as directives from './directives';\n\n/* eslint-disable no-var, no-undef, guard-for-in, object-shorthand */\n\nconst VuePlugin = {\n    install: function (Vue) {\n        if (Vue._bootstrap_vue_installed) {\n            return;\n        }\n\n        Vue._bootstrap_vue_installed = true;\n\n        // Register components\n        for (var component in components) {\n            Vue.component(component, components[component]);\n        }\n\n        // Register directives\n        for (var directive in directives) {\n            Vue.directive(directive, directives[directive]);\n        }\n    }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(VuePlugin);\n}\n\nexport default VuePlugin;\n"],"names":["observeDOM","el","callback","opts","const","MutationObserver","window","WebKitMutationObserver","eventListenerSupported","addEventListener","obs","mutations","addedNodes","length","removedNodes","observe","Object","assign","childList","subtree","targets","binding","listen_types","fn","vm","__vue__","console","warn","keys","modifiers","filter","t","all_listen_types","value","push","listener","forEach","type","log","render","data","countDownTimerId","dismissed","created","this","state","computed","classObject","alertVariant","dismissible","variant","localShow","show","props","String","default","Boolean","Number","watch","showChanged","mounted","methods","dismiss","$emit","clearCounter","clearInterval","let","dismissCountDown","setInterval","componentType","$router","to","hrefString","path","href","activeClass","disabled","exact","click","e","preventDefault","stopPropagation","$root","components","bLink","items2","last","items","map","item","text","link","active","__active","Array","required","onclick","btnVariant","btnSize","btnBlock","btnDisabled","inactive","block","size","role","toolbar","vertical","_id","id","_uid","mixins","generateId","bInputGroupAddon","left","right","blockClass","overlay","cardVariant","cardInverse","inverse","indexOf","cardAlign","align","header","showHeader","headerTag","footer","showFooter","footerTag","title","subTitle","noBlock","img","imgAlt","deck","columns","DIRECTION","next","current","prev","index","isSliding","slides","interval","indicators","controls","height","background","pause","_intervalId","start","$el","querySelectorAll","classList","add","val","oldVal","direction","currentSlide","nextSlide","_carouselAnimation","setTimeout","remove","destroyed","clearTimeout","contentVisibleUp","caption","contentClasses","classes","carousel-caption","navbar-collapse","isNav","toggle","enter","style","realHeight","getComputedStyle","offsetHeight","leave","clearHeight","$on","target","document","documentElement","_clickOutListener","removeEventListener","contains","clickOutListener","ITEM_SELECTOR","split","dropup","visible","old","children","body","noop","getItems","focus","onTab","onEsc","$refs","button","focusNext","up","menu","clickOut","dropdown","bButton","toggleText","extends","itemType","tag","selected","dropdownToggle","caret","displayItem","returnObject","model","forceDefault","defaultText","result","list","position","select","hub","inline","inputState","labelLayout","horizontal","labelSize","inputLayout","updateTarget","content","input","querySelector","inputSelector","updated","label","description","feedback","inputClass","custom","plain","name","checkboxClass","custom-control","form-check-inline","formMixin","formCheckBoxMixin","prop","event","uncheckedValue","checked","formOptions","options","isArray","option","valueField","textField","selectedValue","i","localValue","old_value","formOptionsMixin","stacked","staticValue","formatter","Function","bFormInputStatic","rowsCount","toString","format","formattedValue","onInput","lazyFormatter","onChange","onKeyUp","static","placeholder","rows","textarea","selectedFile","dragging","selectedLabel","multiple","selectedFormat","replace","file","join","computedChooseLabel","chooseLabel","newVal","onFileChange","dataTransfer","noTraverse","queue","webkitGetAsEntry","traverseFileTree","Promise","all","then","filesArr","setFiles","prototype","concat","apply","files","filesArray","match","accept","dragover","noDrop","dropEffect","drop","resolve","isFile","$path","isDirectory","createReader","readEntries","entries","directory","dropLabel","fluid","containerFluid","lead","badgeVariant","badgePill","pill","flush","actionTags","listState","isAction","action","myTag","verticalAlignClass","verticalAlign","rightAlign","bBtn","is_visible","new_val","old_val","hide","fade","closeTitle","okTitle","closeOnBackdrop","closeOnEsc","hideHeader","hideFooter","hideHeaderClose","isOK","canceled","cancel","onClickOut","enforceFocus","nav","navbar-nav","isNavBar","nav-tabs","tabs","nav-pills","pills","flex-column","nav-fill","fill","class","fixed","sticky","toggleable","toggleBreakpoint","diff","showPrev","showNext","currentPage","numberOfPages","Math","ceil","totalRows","perPage","pageLinks","limit","secondaryVariant","_return","newPage","newValue","oldValue","TRIGGER_LISTENERS","hover","mouseenter","mouseleave","blur","PLACEMENT_PARAMS","top","bottom","TETHER_CLASS_PREFIX","TETHER_CLASSES","element","enabled","TRANSITION_DURATION","constraints","debounce","validator","delay","offset","test","placement","popoverStyle","targetOffset","triggers","triggerState","classState","lastEvent","normalizedTriggers","popoverAlignment","showState","setOptions","newTriggers","oldTriggers","updateListeners","getDelay","_timeout","togglePopover","addListener","trigger","_trigger","eventHandler","destroyTether","_tether","destroy","regx","RegExp","className","timeStamp","getTetherOptions","attachment","_popover","classPrefix","hidePopover","display","refreshPosition","$nextTick","removeListener","showPopover","Tether","newShowState","appliedTriggers","removeTriggers","popover","beforeDestroy","progressVariant","striped","animated","styleObject","width","progress","p","pow","precision","round","max","showProgress","showValue","v","k","defaultSortCompare","a","b","sortBy","localeCompare","undefined","numeric","bPagination","sortDesc","fields","items_key","sortCompare","itemsProvider","_items","slice","regex","lastIndex","sort","r","rowClicked","headClick","field","key","sortable","currentTab","noFade","card","small","lazy","setTab","$set","navStyle","nextTab","previousTab","force","tab","updateTabs","$slots","componentInstance","tabIndex","observeDom","tabsContainer","bind","beforeLeave","localActive","headHtml","bPopover","ref","VuePlugin","install","Vue","_bootstrap_vue_installed","component","directive","directives","use"],"mappings":"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"}